<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.shinnlove.springbootall.db.dao.UserPkRecordRepo">

    <resultMap id="BaseResultMap" type="com.shinnlove.springbootall.db.po.UserPkRecordEntity">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="activity_id" jdbcType="VARCHAR" property="activityId" />
        <result column="item_type" jdbcType="INTEGER" property="itemType" />
        <result column="item_name" jdbcType="VARCHAR" property="itemName" />
        <result column="item_img_url" jdbcType="VARCHAR" property="itemImgUrl" />
        <result column="challenger_guid" jdbcType="BIGINT" property="challengerGuid" />
        <result column="challenger_item_num" jdbcType="INTEGER" property="challengerItemNum" />
        <result column="defender_guid" jdbcType="BIGINT" property="defenderGuid" />
        <result column="defender_item_num" jdbcType="INTEGER" property="defenderItemNum" />
        <result column="pk_status" jdbcType="TINYINT" property="pkStatus" />
        <result column="prize_name" jdbcType="VARCHAR" property="prizeName" />
        <result column="prize_desc" jdbcType="VARCHAR" property="prizeDesc" />
        <result column="prize_img_url" jdbcType="VARCHAR" property="prizeImgUrl" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    </resultMap>

    <insert id="save" useGeneratedKeys="true" keyProperty="entity.id">
        insert into ${tableName} (activity_id, item_type, challenger_guid,
                                  challenger_item_num, defender_guid, defender_item_num,
                                  pk_status, prize_name, prize_desc, prize_img_url)
        values (
                   #{entity.activityId,jdbcType=BIGINT},
                   #{entity.itemType,jdbcType=BIGINT},
                   #{entity.challengerGuid,jdbcType=TINYINT},
                   #{entity.challengerItemNum,jdbcType=BIGINT},
                   #{entity.defenderGuid,jdbcType=TIMESTAMP},
                   #{entity.defenderItemNum,jdbcType=TIMESTAMP},
                   #{entity.pkStatus,jdbcType=TIMESTAMP},
                   #{entity.prizeName,jdbcType=TIMESTAMP},
                   #{entity.prizeDesc,jdbcType=TIMESTAMP},
                   #{entity.prizeImgUrl,jdbcType=TIMESTAMP}
               )
    </insert>

    <select id="queryRecordByGuidAndTime" resultMap="BaseResultMap">
        SELECT activity_id, item_type, challenger_guid,
        challenger_item_num, defender_guid, defender_item_num,
        pk_status, prize_name, prize_desc, prize_img_url,
        create_time, update_time
        FROM ${tableName}
        WHERE `activity_id` = #{activityId} AND `challenger_guid` = #{guid}
        <if test="startTime != null and endTime != null">
            AND create_time BETWEEN #{startTime,jdbcType=TIMESTAMP} AND #{endTime,jdbcType=TIMESTAMP}
        </if>
        ORDER BY `create_time` DESC
    </select>

</mapper>
